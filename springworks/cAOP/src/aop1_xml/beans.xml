<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
<!-- [1]target Bean 지정  (핵심 기능을 하는 bean)-->
<bean id='targetBean' class="aop1_xml.MessageBeanImpl"/>
<!-- [2]advice Bean 지정 (공통 기능을 하는 bean) -->
<bean id='loggingAdvice' class="aop1_xml.LoggingAdvice"></bean>
<bean id='sampleAdvice' class="aop1_xml.SampleAdvice"></bean>
<!-- [3]AOP 환경 설정 -->
<!-- execution(public * aop1_xml.*.*Hello(..))
	 public 안에 리턴 값은 상관 없이 aop1_xml 패키지 안에 모든 클래스 안에 Hello라는 메소드를 호출 하는데 인자는 상관없이-->
<aop:config>
	<aop:pointcut expression="execution(public * aop1_xml.*.*Hello(..))" id="pointcut"/>
	<aop:aspect ref='loggingAdvice'>
		<aop:before method="before" pointcut-ref="pointcut"/>
		<aop:after method="xxxxx" pointcut-ref="pointcut"/>
	</aop:aspect>
	
	<aop:aspect ref='sampleAdvice'>
		<aop:around method="around" pointcut-ref="pointcut"/>
	</aop:aspect>
</aop:config>
</beans>
